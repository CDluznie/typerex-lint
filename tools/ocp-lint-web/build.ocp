optcomp_opt = %string(strings = [
  "-let ocaml_full_version=("
    ocaml_major_version ","
    ocaml_minor_version ","
    ocaml_point_version
  ")"
])

camlp4_optcomp_js = [
  "camlp4o"
  "%{optcomp_SRC_DIR}%/optcomp.cma" optcomp_opt
  "%{js_of_ocaml_SRC_DIR}%/pa_js.cmo"
]

camlp4_js = [
  "camlp4o"
  "%{js_of_ocaml_SRC_DIR}%/pa_js.cmo"
]

camlp4_optcomp = [
  "camlp4o"
  "%{optcomp_SRC_DIR}%/optcomp.cma" optcomp_opt
]

begin program "ocp-lint-web-main"

   has_asm = false
   pp = [ "camlp4o" "-I" "%{js_of_ocaml_SRC_DIR}%" "pa_js.cmo" ]
   files = [
     "web_utils"
     "web_data_table.ml"
     "web_warning_content.ml"
     "web_navigation_system.ml"
     "web_home_content.ml"
     "web_linter_content.ml"
     "web_main.ml"
   ]

   requires = [
     "ace"
     "compiler-libs"
     "js_of_ocaml"
     "ocp-lint-api-types"
     "ocp-lint-output-json"
   ]

   (* Also compile bytecode into javascript *)

   build_targets = [ "static/js/json_output.js" ]
   client_byte = [ %string
     ( strings = [ "%{ocp-lint-web-main_FULL_DST_DIR}%/"
                   "ocp-lint-web-main.byte"
            ] ) ]
   build_rules = [
      "static/js/json_output.js" (
       sources = [ client_byte ]
       commands = [
         { "js_of_ocaml"
            (* Use these options to debug Javascript:
               "-sourcemap" "-pretty" "-noinline" *)
             "+toplevel.js" "+weak.js" (* WHY ??? GRGR *)
	     "ocplib_unix.js"
             "-o" "static/js/json_output.js"
              client_byte }
       ]
       build_target = true
     )
   ]
end

begin program "ocp-lint-web-fileviewer"

   has_asm = false
   pp = [ "camlp4o" "-I" "%{js_of_ocaml_SRC_DIR}%" "pa_js.cmo" ]
   files = [
     "ace_file_viewer.ml"
   ]

   requires = [
     "ace"
     "c3"
     "compiler-libs"
     "js_of_ocaml"
     "ocp-lint-api-types"
     "ocp-lint-output-json"
     "yojson"
   ]

   (* Also compile bytecode into javascript *)

   build_targets = [ "static/js/ace_file_viewer.js" ]
   client_byte = [ %string
     ( strings = [ "%{ocp-lint-web-fileviewer_FULL_DST_DIR}%/"
                   "ocp-lint-web-fileviewer.byte"
            ] ) ]
   build_rules = [
      "static/js/ace_file_viewer.js" (
       sources = [ client_byte ]
       commands = [
         { "js_of_ocaml"
            (* Use these options to debug Javascript:
               "-sourcemap" "-pretty" "-noinline" *)
             "+toplevel.js" "+weak.js" (* WHY ??? GRGR *)
	     "ocplib_unix.js"
             "-o" "static/js/ace_file_viewer.js"
              client_byte }
       ]
       build_target = true
     )
   ]
end